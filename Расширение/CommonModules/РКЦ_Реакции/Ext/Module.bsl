
#Область ПрограммныйИнтерфейс

Процедура ПриСозданииНаСервере(Форма, ПараметрыРазмещения) Экспорт
	
	ЭтоФормаСписка = Ложь;
	Параметры = Форма.Параметры;
	ЕстьПараметрыСписка = Параметры.Свойство("Отбор") И Параметры.Свойство("ТекущаяСтрока");
	Если ЕстьПараметрыСписка Тогда
		ЭтоФормаСписка = Истина;
	КонецЕсли;
	//
	//РеквизитИнициализирован = Новый РеквизитФормы("РКЦ_Инициализирован", Новый ОписаниеТипов("Булево"));
	//Форма.ИзменитьРеквизиты(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РеквизитИнициализирован));
	//Форма.РКЦ_Инициализирован = Ложь;
	
	Если ЭтоФормаСписка Тогда
		
		ПереданныеПараметры = ПараметрыРазмещения;
		ПараметрыРазмещения = ПараметрыРазмещения();
		ЗаполнитьЗначенияСвойств(ПараметрыРазмещения, ПереданныеПараметры);
		
		ТаблицаСписка = ПараметрыРазмещения.ПолеИлиТаблица;
		ПолеСписка = Неопределено;
		Если ТипЗнч(ТаблицаСписка) = Тип("ПолеФормы") Тогда
			ПолеСписка = ПараметрыРазмещения.ПолеИлиТаблица;
			ТаблицаСписка = ПолеСписка.Родитель;
		КонецЕсли;
		
		Если ТипЗнч(ТаблицаСписка) <> Тип("ТаблицаФормы")
			Или ТипЗнч(Форма[ТаблицаСписка.ПутьКДанным]) <> Тип("ДинамическийСписок") Тогда
			//TODO: Нормальную проверку параметра
			ВызватьИсключение "Некорректно заполнены параметры размещения на форме списка";
		КонецЕсли;
		
		// Добавление колонки динамического списка
		ДинамическийСписок = Форма[ТаблицаСписка.ПутьКДанным];
		СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
		ЗаполнитьЗначенияСвойств(СвойстваСписка, ДинамическийСписок);
		
		Если Не ЗначениеЗаполнено(СвойстваСписка.ОсновнаяТаблица)
			Или Не РКЦ_Реакции.НастройкиРеакцийОбъекта(СвойстваСписка.ОсновнаяТаблица) Тогда
			Возврат;
		КонецЕсли;
		
		Если ДинамическийСписок.ПроизвольныйЗапрос Тогда
			
			СхемаЗапроса = Новый СхемаЗапроса;
			СхемаЗапроса.УстановитьТекстЗапроса(СвойстваСписка.ТекстЗапроса);
			Для Каждого ПакетЗапросов ИЗ СхемаЗапроса.ПакетЗапросов Цикл
				Если ПакетЗапросов.ТаблицаДляПомещения = "" Тогда
					ЗапросВыбора = ПакетЗапросов;
				КонецЕсли;
			КонецЦикла;
			ОператорВыбора = ЗапросВыбора.Операторы[0];
			Выражение = ОператорВыбора.ВыбираемыеПоля.Добавить("NULL");
			ЗапросВыбора.Колонки.Найти(Выражение).Псевдоним = "РКЦ_Реакции";
			СвойстваСписка.ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
			
			ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(ТаблицаСписка, СвойстваСписка);
			
			МассивПолейСОграничениями = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("РКЦ_Реакции");
			ДинамическийСписок.УстановитьОграниченияИспользованияВГруппировке(МассивПолейСОграничениями);
			ДинамическийСписок.УстановитьОграниченияИспользованияВОтборе     (МассивПолейСОграничениями);
			ДинамическийСписок.УстановитьОграниченияИспользованияВПорядке    (МассивПолейСОграничениями);
			//
			//Форма.РКЦ_Инициализирован = Истина;
			
		Иначе
			
			ТекстСообщения = нСтр("ru='Не поддерживается вывод реакций в список с непроизвольным запросом'", "ru");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
			
		КонецЕсли;
		
		// Добавление поля таблицы
		ПолеРеакций = Форма.Элементы.Вставить(ТаблицаСписка.Имя + "РКЦ_Реакции", Тип("ПолеФормы"), ТаблицаСписка, ПолеСписка);
		ПолеРеакций.Вид              = ВидПоляФормы.ПолеВвода;
		ПолеРеакций.ПутьКДанным      = ТаблицаСписка.ПутьКДанным + ".РКЦ_Реакции";
		ПолеРеакций.Заголовок        = нСтр("ru='Реакции'", "ru");
		ПолеРеакций.АвтоВысотаЯчейки = Истина;
		ПолеРеакций.Доступность      = Ложь;
		ПолеРеакций.Ширина           = 23;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыРазмещения() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("ПолеИлиТаблица");
	Возврат Результат;
	
КонецФункции

Процедура ПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки) Экспорт
	
	Перем КлючСтроки;
	
	Для Каждого Строка Из Строки Цикл
		КлючСтроки = Строка.Ключ;
		Прервать;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(КлючСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектМетаданных = КлючСтроки.Метаданные();
	ПолноеИмя = ОбъектМетаданных.ПолноеИмя();
	Если Не РКЦ_Реакции.НастройкиРеакцийОбъекта(ПолноеИмя) Тогда
		Возврат;
	КонецЕсли;
	ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ОбъектМетаданных);
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеакцииОбъектов.Идентификатор КАК Идентификатор,
	|	РеакцииОбъектов.Реакция КАК Реакция,
	|	КОЛИЧЕСТВО(РеакцииОбъектов.Реакция) КАК Число,
	|	МАКСИМУМ(РеакцииОбъектов.Пользователь = &ТекущийПользователь) КАК Наша
	|ПОМЕСТИТЬ РеакцииОбъекта
	|ИЗ
	|	РегистрСведений.РКЦ_РеакцииОбъектов КАК РеакцииОбъектов
	|ГДЕ
	|	РеакцииОбъектов.ИдентификаторОбъектаМетаданных = &ИдентификаторОбъектаМетаданных
	|		И РеакцииОбъектов.Идентификатор В(&Идентификаторы)
	|
	|СГРУППИРОВАТЬ ПО
	|	РеакцииОбъектов.Идентификатор,
	|	РеакцииОбъектов.Реакция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеакцииОбъекта.Идентификатор КАК Идентификатор,
	|	РеакцииОбъекта.Число КАК Число,
	|	РеакцииОбъекта.Наша КАК ЕстьНаша,
	|	РеакцииОбъекта.Реакция КАК Реакция,
	|	РКЦ_Реакции.Картинка КАК Картинка,
	|	РКЦ_Реакции.Наименование КАК Наименование,
	|	РКЦ_Реакции.Ссылка ЕСТЬ НЕ NULL КАК ЭтоПользовательская
	|ИЗ
	|	РеакцииОбъекта КАК РеакцииОбъекта
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РКЦ_Реакции КАК РКЦ_Реакции
	|		ПО РеакцииОбъекта.Реакция = РКЦ_Реакции.Ссылка
	|ИТОГИ
	|	МАКСИМУМ(ЕстьНаша)
	|ПО
	|	Идентификатор";
	
	Идентификаторы = Новый Массив;
	Для Каждого Ключ Из Строки.ПолучитьКлючи() Цикл
		Идентификаторы.Добавить(Ключ.УникальныйИдентификатор());
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ИдентификаторОбъектаМетаданных", ИдентификаторОбъектаМетаданных);
	Запрос.УстановитьПараметр("Идентификаторы", Идентификаторы);
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.ТекущийПользователь());
	
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОбъектов.Следующий() Цикл
		
		СтрокаСписка = Строки[Менеджер.ПолучитьСсылку(ВыборкаОбъектов.Идентификатор)];
		
		СписокРеакций = Новый СписокЗначений;
		ВыборкаРеакций = ВыборкаОбъектов.Выбрать();
		Пока ВыборкаРеакций.Следующий() Цикл
			
			Если ВыборкаРеакций.ЭтоПользовательская Тогда
				Картинка = ВыборкаРеакций.Картинка.Получить();
			Иначе
				Картинка = БиблиотекаКартинок[ВыборкаРеакций.Реакция];
			КонецЕсли;
			
			СписокРеакций.Добавить(
				ВыборкаРеакций.Наименование,
				ВыборкаРеакций.Число, ,
				Картинка
			);
			
		КонецЦикла;
		
		Если СтрокаСписка.Данные.Свойство("РКЦ_Реакции") Тогда
			СтрокаСписка.Данные["РКЦ_Реакции"] = СписокРеакций;
			Если ВыборкаОбъектов.ЕстьНаша Тогда
				СтрокаСписка.Оформление["РКЦ_Реакции"].УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ФонАктивногоВариантаВторой);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция НастройкиРеакцийОбъекта(ПолноеИмя, Настройки = Неопределено) Экспорт
	
	Настройки = РКЦ_РеакцииПовтИсп.НастройкиРеакцийОбъекта(ПолноеИмя);
	Возврат Настройки <> Неопределено;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

#Область ПодключаемыеКоманды

Процедура ПриОпределенииВидовПодключаемыхКоманд(ВидыПодключаемыхКоманд) Экспорт
	
	Вид = ВидыПодключаемыхКоманд.Добавить();
	Вид.Имя         = "РКЦ_Реакции";
	Вид.ИмяПодменю  = "ПодменюОтреагировать";
	Вид.Заголовок   = НСтр("ru = 'Отреагировать'");
	Вид.Картинка    = БиблиотекаКартинок.РКЦ_ПодсистемаРеакции;
	Вид.Отображение = ОтображениеКнопки.КартинкаИТекст;
	
КонецПроцедуры

Процедура ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт
	
	ДоступныеТипы = Новый Массив;
	Для Каждого Источник Из Источники.Строки Цикл
		Если РКЦ_Реакции.НастройкиРеакцийОбъекта(Источник.ПолноеИмя) Тогда
			ДоступныеТипы.Добавить(Источник.ТипСсылкиДанных);
		КонецЕсли;
	КонецЦикла;
	
	Если ДоступныеТипы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Добавление реакций наборов
	Для Каждого ОбщийМодуль Из Метаданные.ОбщиеМодули Цикл
		
		Если Не СтрНайти(ОбщийМодуль.Имя, "РеакцииКлиентСервер") Тогда
			Продолжить;
		КонецЕсли;
		
		МодульНабора  = ОбщегоНазначения.ОбщийМодуль(ОбщийМодуль.Имя);
		РеакцииНабора = МодульНабора.ОписаниеРеакцийНабора();
		
		Для Каждого ИмяИПредставление Из РеакцииНабора Цикл
			
			КомандаРеакции = КомандаРеакции(Команды);
			КомандаРеакции.Идентификатор = ИмяИПредставление.Ключ;
			КомандаРеакции.Представление = ИмяИПредставление.Значение;
			КомандаРеакции.Картинка = БиблиотекаКартинок[ИмяИПредставление.Ключ];
			КомандаРеакции.Обработчик = "РКЦ_РеакцииКлиент.Отреагировать";
			КомандаРеакции.Важность = "Важное";
			КомандаРеакции.Порядок = Команды.Количество();
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Добавление пользовательских реакций
	Количество = Команды.Количество();
	ПользовательскаяРеакция = Справочники.РКЦ_Реакции.Выбрать();
	Пока ПользовательскаяРеакция.Следующий() Цикл
		
		КомандаРеакции = КомандаРеакции(Команды);
		КомандаРеакции.Идентификатор = "П." + ПользовательскаяРеакция.Код;
		КомандаРеакции.Представление = ПользовательскаяРеакция.Наименование;
		Картинка = ПользовательскаяРеакция.Картинка.Получить();
		Если Картинка.Вид <> ВидКартинки.Абсолютная Тогда // Ограничение платформы 8.3.27.1606
			КомандаРеакции.Картинка = Картинка;
			КомандаРеакции.Отображение = ОтображениеКнопки.КартинкаИТекст;
		КонецЕсли;
		КомандаРеакции.Обработчик = "РКЦ_РеакцииКлиент.Отреагировать";
		КомандаРеакции.Важность = "Обычное";
		КомандаРеакции.Порядок = Команды.Количество() - Количество;
		
	КонецЦикла;
	
	КомандаВсе = КомандаРеакции(Команды);
	КомандаВсе.Представление = нСтр("ru='Все реакции...'", "ru");
	КомандаВсе.Обработчик = "РКЦ_РеакцииКлиент.ВыбратьИзВсехРеакций";
	КомандаВсе.Важность = "СмТакже";
	
	КомандаУдалить = КомандаРеакции(Команды);
	КомандаУдалить.Представление = нСтр("ru='Удалить реакцию'", "ru");
	КомандаУдалить.Картинка = БиблиотекаКартинок.ЗакрытьОтборДинамическогоСписка;
	КомандаУдалить.Обработчик = "РКЦ_РеакцииКлиент.УдалитьРеакцию";
	КомандаУдалить.Важность = "СмТакже";
	
	ТипПараметра = Новый ОписаниеТипов(ДоступныеТипы);
	Команды.ЗаполнитьЗначения(ТипПараметра, "ТипПараметра");
	
КонецПроцедуры

#КонецОбласти

#Область СерверныеОповещения

// Не используется
Процедура ПриОтправкеСерверногоОповещения(ИмяОповещения, ВариантыПараметров) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КомандаРеакции(Команды)
	
	КомандаРеакции = Команды.Добавить();
	
	КомандаРеакции.Вид = "РКЦ_Реакции";
	КомандаРеакции.ТолькоВоВсехДействиях = Истина;
	КомандаРеакции.ФункциональныеОпции = "";//TODO
	КомандаРеакции.МножественныйВыбор = Ложь;
	КомандаРеакции.РежимЗаписи = "НеЗаписывать";
	
	Возврат КомандаРеакции;
	
КонецФункции

#КонецОбласти
