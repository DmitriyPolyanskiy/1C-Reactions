
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПараметрыРазмещения = ПараметрыРазмещения();
	ПараметрыРазмещения.ПолеИлиТаблица = Элементы.ДСБанковскийСчетПоУмолчанию;
	Реакции_ПриСозданииНаСервере(ЭтаФорма, ПараметрыРазмещения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура Реакции_ПриСозданииНаСервере(Форма, ПараметрыРазмещения)
	
	ЭтоФормаСписка = Ложь;
	Параметры = Форма.Параметры;
	ЕстьПараметрыСписка  = Параметры.Свойство("Отбор") И Параметры.Свойство("ТекущаяСтрока");
	Если ЕстьПараметрыСписка Тогда
		ЭтоФормаСписка = Истина;
	КонецЕсли;
	
	Если ЭтоФормаСписка Тогда
		
		ПереданныеПараметры = ПараметрыРазмещения;
		ПараметрыРазмещения = ПараметрыРазмещения();
		ЗаполнитьЗначенияСвойств(ПараметрыРазмещения, ПереданныеПараметры);
		
		ТаблицаСписка = ПараметрыРазмещения.ПолеИлиТаблица;
		ПолеСписка = Неопределено;
		Если ТипЗнч(ТаблицаСписка) = Тип("ПолеФормы") Тогда
			ПолеСписка = ПараметрыРазмещения.ПолеИлиТаблица;
			ТаблицаСписка = ПолеСписка.Родитель;
		КонецЕсли;
		
		Если ТипЗнч(ТаблицаСписка) <> Тип("ТаблицаФормы")
			Или ТипЗнч(Форма[ТаблицаСписка.ПутьКДанным]) <> Тип("ДинамическийСписок") Тогда
			//TODO: Нормальную проверку параметра
			ВызватьИсключение "Некорректно заполнены параметры размещения на форме списка";
		КонецЕсли;
		
		// Добавление колонки динамического списка
		ДинамическийСписок = Форма[ТаблицаСписка.ПутьКДанным];
		СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
		ЗаполнитьЗначенияСвойств(СвойстваСписка, ДинамическийСписок);
		
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(СвойстваСписка.ТекстЗапроса);
		Для Каждого ПакетЗапросов ИЗ СхемаЗапроса.ПакетЗапросов Цикл
			Если ПакетЗапросов.ТаблицаДляПомещения = "" Тогда
				ЗапросВыбора = ПакетЗапросов;
			КонецЕсли;
		КонецЦикла;
		ОператорВыбора = ЗапросВыбора.Операторы[0];
		Выражение = ОператорВыбора.ВыбираемыеПоля.Добавить("NULL");
		ЗапросВыбора.Колонки.Найти(Выражение).Псевдоним = "РКЦ_Реакции";
		СвойстваСписка.ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
		
		ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(ТаблицаСписка, СвойстваСписка);
		
		МассивПолейСОграничениями = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("РКЦ_Реакции");
		ДинамическийСписок.УстановитьОграниченияИспользованияВГруппировке(МассивПолейСОграничениями);
		ДинамическийСписок.УстановитьОграниченияИспользованияВОтборе     (МассивПолейСОграничениями);
		ДинамическийСписок.УстановитьОграниченияИспользованияВПорядке    (МассивПолейСОграничениями);
		
		// Добавление поля таблицы
		ПолеРеакций = Форма.Элементы.Вставить(ТаблицаСписка.Имя + "РКЦ_Реакции", Тип("ПолеФормы"), ТаблицаСписка, ПолеСписка);
		ПолеРеакций.Вид = ВидПоляФормы.ПолеВвода;
		ПолеРеакций.ПутьКДанным = ТаблицаСписка.ПутьКДанным + ".РКЦ_Реакции";
		ПолеРеакций.Заголовок = нСтр("ru='Реакции'", "ru");
		ПолеРеакций.АвтоВысотаЯчейки = Истина;
		
		// Добавление команд списка
		КонтекстноеМеню = ТаблицаСписка.КонтекстноеМеню;
		Отреагировать = Форма.Элементы.Добавить("РКЦ_ГруппаОтреагировать", Тип("ГруппаФормы"), КонтекстноеМеню);
		Отреагировать.Вид = ВидГруппыФормы.Подменю;
		Отреагировать.Заголовок = нСтр("ru='Отреагировать'", "ru");
		
		Реакция = Справочники.РКЦ_Реакции.Выбрать();
		Пока Реакция.Следующий() Цикл
			ИмяКоманды = "РКЦ_" + СтрЗаменить(Реакция.Ссылка.УникальныйИдентификатор(), "-", "_");
			КомандаРеакции = Форма.Команды.Добавить(ИмяКоманды);
			КомандаРеакции.Действие = "Подключаемый_Отреагировать";
			//КомандаРеакции.Картинка = Реакция.Картинка.Получить();
			КомандаРеакции.Заголовок = Реакция.Наименование;
			КомандаРеакции.Отображение = ОтображениеКнопки.КартинкаИТекст;
			
			КнопкаРеакции = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Отреагировать);
			КнопкаРеакции.ИмяКоманды = ИмяКоманды;
		КонецЦикла;
		
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПараметрыРазмещения()
	
	Результат = Новый Структура();
	Результат.Вставить("ПолеИлиТаблица");
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ДСПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Перем КлючСтроки;
	
	Для Каждого Строка Из Строки Цикл
		КлючСтроки = Строка.Ключ;
		Прервать;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(КлючСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектМетаданных = КлючСтроки.Метаданные();
	ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ОбъектМетаданных);
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ОбъектМетаданных.ПолноеИмя());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеакцииОбъектов.Идентификатор КАК Идентификатор,
	|	РеакцииОбъектов.Реакция КАК Реакция,
	|	КОЛИЧЕСТВО(РеакцииОбъектов.Реакция) КАК Число,
	|	МАКСИМУМ(РеакцииОбъектов.Пользователь = &ТекущийПользователь) КАК Наша
	|ПОМЕСТИТЬ РеакцииОбъекта
	|ИЗ
	|	РегистрСведений.РКЦ_РеакцииОбъектов КАК РеакцииОбъектов
	|ГДЕ
	|	РеакцииОбъектов.ИдентификаторОбъектаМетаданных = &ИдентификаторОбъектаМетаданных
	|		И РеакцииОбъектов.Идентификатор В(&Идентификаторы)
	|
	|СГРУППИРОВАТЬ ПО
	|	РеакцииОбъектов.Идентификатор,
	|	РеакцииОбъектов.Реакция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеакцииОбъекта.Идентификатор КАК Идентификатор,
	|	РеакцииОбъекта.Число КАК Число,
	|	РеакцииОбъекта.Наша КАК Наша,
	|	РеакцииОбъекта.Реакция КАК Реакция,
	|	РКЦ_Реакции.Картинка КАК Картинка,
	|	РКЦ_Реакции.Наименование КАК Наименование
	|ИЗ
	|	РеакцииОбъекта КАК РеакцииОбъекта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РКЦ_Реакции КАК РКЦ_Реакции
	|		ПО РеакцииОбъекта.Реакция = РКЦ_Реакции.Ссылка
	|ИТОГИ ПО
	|	Идентификатор";
	
	Идентификаторы = Новый Массив;
	Для Каждого Ключ Из Строки.ПолучитьКлючи() Цикл
		Идентификаторы.Добавить(Ключ.УникальныйИдентификатор());
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ИдентификаторОбъектаМетаданных", ИдентификаторОбъектаМетаданных);
	Запрос.УстановитьПараметр("Идентификаторы", Идентификаторы);
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.ТекущийПользователь());
	
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОбъектов.Следующий() Цикл
		
		СтрокаСписка = Строки[Менеджер.ПолучитьСсылку(ВыборкаОбъектов.Идентификатор)];
		
		СписокРеакций = Новый СписокЗначений;
		ВыборкаРеакций = ВыборкаОбъектов.Выбрать();
		Пока ВыборкаРеакций.Следующий() Цикл
			СписокРеакций.Добавить(
				ВыборкаРеакций.Наименование,
				ВыборкаРеакций.Число,
				ВыборкаРеакций.Наша,
				ВыборкаРеакций.Картинка.Получить()
			);
		КонецЦикла;
		СтрокаСписка.Данные["РКЦ_Реакции"] = СписокРеакций;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_Отреагировать(Команда)
	
	Сообщить("TODO: обработчик для Отреагировать");
	
КонецПроцедуры
